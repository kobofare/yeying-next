/**
 * @fileoverview gRPC-Web generated client stub for yeying.api.application
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v4.25.0
// source: yeying/api/application/application.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var yeying_api_common_message_pb = require('../../../yeying/api/common/message_pb.cjs')

var yeying_api_common_code_pb = require('../../../yeying/api/common/code_pb.cjs')
const proto = {};
proto.yeying = {};
proto.yeying.api = {};
proto.yeying.api.application = require('./application_pb.cjs');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.yeying.api.application.ApplicationClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.yeying.api.application.ApplicationPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yeying.api.application.SearchRequest,
 *   !proto.yeying.api.application.SearchResponse>}
 */
const methodDescriptor_Application_Search = new grpc.web.MethodDescriptor(
  '/yeying.api.application.Application/Search',
  grpc.web.MethodType.UNARY,
  proto.yeying.api.application.SearchRequest,
  proto.yeying.api.application.SearchResponse,
  /**
   * @param {!proto.yeying.api.application.SearchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yeying.api.application.SearchResponse.deserializeBinary
);


/**
 * @param {!proto.yeying.api.application.SearchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yeying.api.application.SearchResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yeying.api.application.SearchResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yeying.api.application.ApplicationClient.prototype.search =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yeying.api.application.Application/Search',
      request,
      metadata || {},
      methodDescriptor_Application_Search,
      callback);
};


/**
 * @param {!proto.yeying.api.application.SearchRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yeying.api.application.SearchResponse>}
 *     Promise that resolves to the response
 */
proto.yeying.api.application.ApplicationPromiseClient.prototype.search =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yeying.api.application.Application/Search',
      request,
      metadata || {},
      methodDescriptor_Application_Search);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yeying.api.application.AuditRequest,
 *   !proto.yeying.api.application.AuditResponse>}
 */
const methodDescriptor_Application_Audit = new grpc.web.MethodDescriptor(
  '/yeying.api.application.Application/Audit',
  grpc.web.MethodType.UNARY,
  proto.yeying.api.application.AuditRequest,
  proto.yeying.api.application.AuditResponse,
  /**
   * @param {!proto.yeying.api.application.AuditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yeying.api.application.AuditResponse.deserializeBinary
);


/**
 * @param {!proto.yeying.api.application.AuditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yeying.api.application.AuditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yeying.api.application.AuditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yeying.api.application.ApplicationClient.prototype.audit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yeying.api.application.Application/Audit',
      request,
      metadata || {},
      methodDescriptor_Application_Audit,
      callback);
};


/**
 * @param {!proto.yeying.api.application.AuditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yeying.api.application.AuditResponse>}
 *     Promise that resolves to the response
 */
proto.yeying.api.application.ApplicationPromiseClient.prototype.audit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yeying.api.application.Application/Audit',
      request,
      metadata || {},
      methodDescriptor_Application_Audit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yeying.api.application.CreateRequest,
 *   !proto.yeying.api.application.CreateResponse>}
 */
const methodDescriptor_Application_Create = new grpc.web.MethodDescriptor(
  '/yeying.api.application.Application/Create',
  grpc.web.MethodType.UNARY,
  proto.yeying.api.application.CreateRequest,
  proto.yeying.api.application.CreateResponse,
  /**
   * @param {!proto.yeying.api.application.CreateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yeying.api.application.CreateResponse.deserializeBinary
);


/**
 * @param {!proto.yeying.api.application.CreateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yeying.api.application.CreateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yeying.api.application.CreateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yeying.api.application.ApplicationClient.prototype.create =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yeying.api.application.Application/Create',
      request,
      metadata || {},
      methodDescriptor_Application_Create,
      callback);
};


/**
 * @param {!proto.yeying.api.application.CreateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yeying.api.application.CreateResponse>}
 *     Promise that resolves to the response
 */
proto.yeying.api.application.ApplicationPromiseClient.prototype.create =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yeying.api.application.Application/Create',
      request,
      metadata || {},
      methodDescriptor_Application_Create);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yeying.api.application.DeleteRequest,
 *   !proto.yeying.api.application.DeleteResponse>}
 */
const methodDescriptor_Application_Delete = new grpc.web.MethodDescriptor(
  '/yeying.api.application.Application/Delete',
  grpc.web.MethodType.UNARY,
  proto.yeying.api.application.DeleteRequest,
  proto.yeying.api.application.DeleteResponse,
  /**
   * @param {!proto.yeying.api.application.DeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yeying.api.application.DeleteResponse.deserializeBinary
);


/**
 * @param {!proto.yeying.api.application.DeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yeying.api.application.DeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yeying.api.application.DeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yeying.api.application.ApplicationClient.prototype.delete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yeying.api.application.Application/Delete',
      request,
      metadata || {},
      methodDescriptor_Application_Delete,
      callback);
};


/**
 * @param {!proto.yeying.api.application.DeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yeying.api.application.DeleteResponse>}
 *     Promise that resolves to the response
 */
proto.yeying.api.application.ApplicationPromiseClient.prototype.delete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yeying.api.application.Application/Delete',
      request,
      metadata || {},
      methodDescriptor_Application_Delete);
};


module.exports = proto.yeying.api.application;

