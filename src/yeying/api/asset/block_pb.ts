// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file yeying/api/asset/block.proto (package yeying.api.asset, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { MessageHeader, ResponseStatus } from "../common/message_pb";
import { file_yeying_api_common_message } from "../common/message_pb";
import type { StreamDataTagEnum } from "../common/code_pb";
import { file_yeying_api_common_code } from "../common/code_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file yeying/api/asset/block.proto.
 */
export const file_yeying_api_asset_block: GenFile = /*@__PURE__*/
  fileDesc("Chx5ZXlpbmcvYXBpL2Fzc2V0L2Jsb2NrLnByb3RvEhB5ZXlpbmcuYXBpLmFzc2V0Io0CChVTdHJlYW1QdXRCbG9ja1JlcXVlc3QSNQoHZGF0YVRhZxgBIAEoDjIkLnlleWluZy5hcGkuY29tbW9uLlN0cmVhbURhdGFUYWdFbnVtEjsKBGhlYWQYAiABKAsyKy55ZXlpbmcuYXBpLmFzc2V0LlN0cmVhbVB1dEJsb2NrUmVxdWVzdEhlYWRIABI7CgRib2R5GAMgASgLMisueWV5aW5nLmFwaS5hc3NldC5TdHJlYW1QdXRCbG9ja1JlcXVlc3RCb2R5SAASOwoEdGFpbBgEIAEoCzIrLnlleWluZy5hcGkuYXNzZXQuU3RyZWFtUHV0QmxvY2tSZXF1ZXN0VGFpbEgAQgYKBGRhdGEihQEKGVN0cmVhbVB1dEJsb2NrUmVxdWVzdEhlYWQSMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchI2CgRib2R5GAIgASgLMigueWV5aW5nLmFwaS5hc3NldC5TdHJlYW1QdXRCbG9ja0hlYWRCb2R5IiYKFlN0cmVhbVB1dEJsb2NrSGVhZEJvZHkSDAoEaGFzaBgBIAEoCSIpChlTdHJlYW1QdXRCbG9ja1JlcXVlc3RCb2R5EgwKBGRhdGEYASABKAwihQEKGVN0cmVhbVB1dEJsb2NrUmVxdWVzdFRhaWwSMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchI2CgRib2R5GAIgASgLMigueWV5aW5nLmFwaS5hc3NldC5TdHJlYW1QdXRCbG9ja1RhaWxCb2R5IkgKFlN0cmVhbVB1dEJsb2NrVGFpbEJvZHkSLgoFYmxvY2sYASABKAsyHy55ZXlpbmcuYXBpLmFzc2V0LkJsb2NrTWV0YWRhdGEiRQoTUHV0QmxvY2tSZXF1ZXN0Qm9keRIuCgVibG9jaxgBIAEoCzIfLnlleWluZy5hcGkuYXNzZXQuQmxvY2tNZXRhZGF0YSKGAQoPUHV0QmxvY2tSZXF1ZXN0EjAKBmhlYWRlchgBIAEoCzIgLnlleWluZy5hcGkuY29tbW9uLk1lc3NhZ2VIZWFkZXISMwoEYm9keRgCIAEoCzIlLnlleWluZy5hcGkuYXNzZXQuUHV0QmxvY2tSZXF1ZXN0Qm9keRIMCgRkYXRhGAMgASgMInoKEFB1dEJsb2NrUmVzcG9uc2USMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchI0CgRib2R5GAIgASgLMiYueWV5aW5nLmFwaS5hc3NldC5QdXRCbG9ja1Jlc3BvbnNlQm9keSJJChRQdXRCbG9ja1Jlc3BvbnNlQm9keRIxCgZzdGF0dXMYASABKAsyIS55ZXlpbmcuYXBpLmNvbW1vbi5SZXNwb25zZVN0YXR1cyJ4Cg9HZXRCbG9ja1JlcXVlc3QSMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchIzCgRib2R5GAIgASgLMiUueWV5aW5nLmFwaS5hc3NldC5HZXRCbG9ja1JlcXVlc3RCb2R5IiMKE0dldEJsb2NrUmVxdWVzdEJvZHkSDAoEaGFzaBgBIAEoCSKRAgoWU3RyZWFtR2V0QmxvY2tSZXNwb25zZRI1CgdkYXRhVGFnGAEgASgOMiQueWV5aW5nLmFwaS5jb21tb24uU3RyZWFtRGF0YVRhZ0VudW0SPAoEaGVhZBgCIAEoCzIsLnlleWluZy5hcGkuYXNzZXQuU3RyZWFtR2V0QmxvY2tSZXNwb25zZUhlYWRIABI8CgRib2R5GAMgASgLMiwueWV5aW5nLmFwaS5hc3NldC5TdHJlYW1HZXRCbG9ja1Jlc3BvbnNlQm9keUgAEjwKBHRhaWwYBCABKAsyLC55ZXlpbmcuYXBpLmFzc2V0LlN0cmVhbUdldEJsb2NrUmVzcG9uc2VUYWlsSABCBgoEZGF0YSKGAQoaU3RyZWFtR2V0QmxvY2tSZXNwb25zZUhlYWQSMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchI2CgRib2R5GAIgASgLMigueWV5aW5nLmFwaS5hc3NldC5TdHJlYW1HZXRCbG9ja0hlYWRCb2R5InsKFlN0cmVhbUdldEJsb2NrSGVhZEJvZHkSMQoGc3RhdHVzGAEgASgLMiEueWV5aW5nLmFwaS5jb21tb24uUmVzcG9uc2VTdGF0dXMSLgoFYmxvY2sYAiABKAsyHy55ZXlpbmcuYXBpLmFzc2V0LkJsb2NrTWV0YWRhdGEiKgoaU3RyZWFtR2V0QmxvY2tSZXNwb25zZUJvZHkSDAoEZGF0YRgBIAEoDCKGAQoaU3RyZWFtR2V0QmxvY2tSZXNwb25zZVRhaWwSMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchI2CgRib2R5GAIgASgLMigueWV5aW5nLmFwaS5hc3NldC5TdHJlYW1HZXRCbG9ja1RhaWxCb2R5IksKFlN0cmVhbUdldEJsb2NrVGFpbEJvZHkSMQoGc3RhdHVzGAEgASgLMiEueWV5aW5nLmFwaS5jb21tb24uUmVzcG9uc2VTdGF0dXMieQoUR2V0QmxvY2tSZXNwb25zZUJvZHkSMQoGc3RhdHVzGAEgASgLMiEueWV5aW5nLmFwaS5jb21tb24uUmVzcG9uc2VTdGF0dXMSLgoFYmxvY2sYAiABKAsyHy55ZXlpbmcuYXBpLmFzc2V0LkJsb2NrTWV0YWRhdGEiiAEKEEdldEJsb2NrUmVzcG9uc2USMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchI0CgRib2R5GAIgASgLMiYueWV5aW5nLmFwaS5hc3NldC5HZXRCbG9ja1Jlc3BvbnNlQm9keRIMCgRkYXRhGAMgASgMImAKDUJsb2NrTWV0YWRhdGESDQoFb3duZXIYASABKAkSDAoEaGFzaBgCIAEoCRIMCgRzaXplGAMgASgEEhEKCWNyZWF0ZWRBdBgEIAEoCRIRCglzaWduYXR1cmUYBSABKAky4wIKBUJsb2NrEk4KA1B1dBIhLnlleWluZy5hcGkuYXNzZXQuUHV0QmxvY2tSZXF1ZXN0GiIueWV5aW5nLmFwaS5hc3NldC5QdXRCbG9ja1Jlc3BvbnNlIgASXAoJU3RyZWFtUHV0EicueWV5aW5nLmFwaS5hc3NldC5TdHJlYW1QdXRCbG9ja1JlcXVlc3QaIi55ZXlpbmcuYXBpLmFzc2V0LlB1dEJsb2NrUmVzcG9uc2UiACgBEk4KA0dldBIhLnlleWluZy5hcGkuYXNzZXQuR2V0QmxvY2tSZXF1ZXN0GiIueWV5aW5nLmFwaS5hc3NldC5HZXRCbG9ja1Jlc3BvbnNlIgASXAoJU3RyZWFtR2V0EiEueWV5aW5nLmFwaS5hc3NldC5HZXRCbG9ja1JlcXVlc3QaKC55ZXlpbmcuYXBpLmFzc2V0LlN0cmVhbUdldEJsb2NrUmVzcG9uc2UiADABQhJaEHlleWluZy9hcGkvYXNzZXRiBnByb3RvMw", [file_yeying_api_common_message, file_yeying_api_common_code]);

/**
 * 先发送内容，然后发送的chunk元信息，
 *
 * @generated from message yeying.api.asset.StreamPutBlockRequest
 */
export type StreamPutBlockRequest = Message<"yeying.api.asset.StreamPutBlockRequest"> & {
  /**
   * @generated from field: yeying.api.common.StreamDataTagEnum dataTag = 1;
   */
  dataTag: StreamDataTagEnum;

  /**
   * @generated from oneof yeying.api.asset.StreamPutBlockRequest.data
   */
  data: {
    /**
     * @generated from field: yeying.api.asset.StreamPutBlockRequestHead head = 2;
     */
    value: StreamPutBlockRequestHead;
    case: "head";
  } | {
    /**
     * @generated from field: yeying.api.asset.StreamPutBlockRequestBody body = 3;
     */
    value: StreamPutBlockRequestBody;
    case: "body";
  } | {
    /**
     * @generated from field: yeying.api.asset.StreamPutBlockRequestTail tail = 4;
     */
    value: StreamPutBlockRequestTail;
    case: "tail";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message yeying.api.asset.StreamPutBlockRequest.
 * Use `create(StreamPutBlockRequestSchema)` to create a new message.
 */
export const StreamPutBlockRequestSchema: GenMessage<StreamPutBlockRequest> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 0);

/**
 * @generated from message yeying.api.asset.StreamPutBlockRequestHead
 */
export type StreamPutBlockRequestHead = Message<"yeying.api.asset.StreamPutBlockRequestHead"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.StreamPutBlockHeadBody body = 2;
   */
  body?: StreamPutBlockHeadBody;
};

/**
 * Describes the message yeying.api.asset.StreamPutBlockRequestHead.
 * Use `create(StreamPutBlockRequestHeadSchema)` to create a new message.
 */
export const StreamPutBlockRequestHeadSchema: GenMessage<StreamPutBlockRequestHead> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 1);

/**
 * @generated from message yeying.api.asset.StreamPutBlockHeadBody
 */
export type StreamPutBlockHeadBody = Message<"yeying.api.asset.StreamPutBlockHeadBody"> & {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;
};

/**
 * Describes the message yeying.api.asset.StreamPutBlockHeadBody.
 * Use `create(StreamPutBlockHeadBodySchema)` to create a new message.
 */
export const StreamPutBlockHeadBodySchema: GenMessage<StreamPutBlockHeadBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 2);

/**
 * @generated from message yeying.api.asset.StreamPutBlockRequestBody
 */
export type StreamPutBlockRequestBody = Message<"yeying.api.asset.StreamPutBlockRequestBody"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message yeying.api.asset.StreamPutBlockRequestBody.
 * Use `create(StreamPutBlockRequestBodySchema)` to create a new message.
 */
export const StreamPutBlockRequestBodySchema: GenMessage<StreamPutBlockRequestBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 3);

/**
 * @generated from message yeying.api.asset.StreamPutBlockRequestTail
 */
export type StreamPutBlockRequestTail = Message<"yeying.api.asset.StreamPutBlockRequestTail"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.StreamPutBlockTailBody body = 2;
   */
  body?: StreamPutBlockTailBody;
};

/**
 * Describes the message yeying.api.asset.StreamPutBlockRequestTail.
 * Use `create(StreamPutBlockRequestTailSchema)` to create a new message.
 */
export const StreamPutBlockRequestTailSchema: GenMessage<StreamPutBlockRequestTail> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 4);

/**
 * @generated from message yeying.api.asset.StreamPutBlockTailBody
 */
export type StreamPutBlockTailBody = Message<"yeying.api.asset.StreamPutBlockTailBody"> & {
  /**
   * @generated from field: yeying.api.asset.BlockMetadata block = 1;
   */
  block?: BlockMetadata;
};

/**
 * Describes the message yeying.api.asset.StreamPutBlockTailBody.
 * Use `create(StreamPutBlockTailBodySchema)` to create a new message.
 */
export const StreamPutBlockTailBodySchema: GenMessage<StreamPutBlockTailBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 5);

/**
 * @generated from message yeying.api.asset.PutBlockRequestBody
 */
export type PutBlockRequestBody = Message<"yeying.api.asset.PutBlockRequestBody"> & {
  /**
   * 资产块
   *
   * @generated from field: yeying.api.asset.BlockMetadata block = 1;
   */
  block?: BlockMetadata;
};

/**
 * Describes the message yeying.api.asset.PutBlockRequestBody.
 * Use `create(PutBlockRequestBodySchema)` to create a new message.
 */
export const PutBlockRequestBodySchema: GenMessage<PutBlockRequestBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 6);

/**
 * @generated from message yeying.api.asset.PutBlockRequest
 */
export type PutBlockRequest = Message<"yeying.api.asset.PutBlockRequest"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.PutBlockRequestBody body = 2;
   */
  body?: PutBlockRequestBody;

  /**
   * 资产块内容
   *
   * @generated from field: bytes data = 3;
   */
  data: Uint8Array;
};

/**
 * Describes the message yeying.api.asset.PutBlockRequest.
 * Use `create(PutBlockRequestSchema)` to create a new message.
 */
export const PutBlockRequestSchema: GenMessage<PutBlockRequest> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 7);

/**
 * @generated from message yeying.api.asset.PutBlockResponse
 */
export type PutBlockResponse = Message<"yeying.api.asset.PutBlockResponse"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.PutBlockResponseBody body = 2;
   */
  body?: PutBlockResponseBody;
};

/**
 * Describes the message yeying.api.asset.PutBlockResponse.
 * Use `create(PutBlockResponseSchema)` to create a new message.
 */
export const PutBlockResponseSchema: GenMessage<PutBlockResponse> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 8);

/**
 * @generated from message yeying.api.asset.PutBlockResponseBody
 */
export type PutBlockResponseBody = Message<"yeying.api.asset.PutBlockResponseBody"> & {
  /**
   * @generated from field: yeying.api.common.ResponseStatus status = 1;
   */
  status?: ResponseStatus;
};

/**
 * Describes the message yeying.api.asset.PutBlockResponseBody.
 * Use `create(PutBlockResponseBodySchema)` to create a new message.
 */
export const PutBlockResponseBodySchema: GenMessage<PutBlockResponseBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 9);

/**
 * @generated from message yeying.api.asset.GetBlockRequest
 */
export type GetBlockRequest = Message<"yeying.api.asset.GetBlockRequest"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.GetBlockRequestBody body = 2;
   */
  body?: GetBlockRequestBody;
};

/**
 * Describes the message yeying.api.asset.GetBlockRequest.
 * Use `create(GetBlockRequestSchema)` to create a new message.
 */
export const GetBlockRequestSchema: GenMessage<GetBlockRequest> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 10);

/**
 * @generated from message yeying.api.asset.GetBlockRequestBody
 */
export type GetBlockRequestBody = Message<"yeying.api.asset.GetBlockRequestBody"> & {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;
};

/**
 * Describes the message yeying.api.asset.GetBlockRequestBody.
 * Use `create(GetBlockRequestBodySchema)` to create a new message.
 */
export const GetBlockRequestBodySchema: GenMessage<GetBlockRequestBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 11);

/**
 * @generated from message yeying.api.asset.StreamGetBlockResponse
 */
export type StreamGetBlockResponse = Message<"yeying.api.asset.StreamGetBlockResponse"> & {
  /**
   * @generated from field: yeying.api.common.StreamDataTagEnum dataTag = 1;
   */
  dataTag: StreamDataTagEnum;

  /**
   * @generated from oneof yeying.api.asset.StreamGetBlockResponse.data
   */
  data: {
    /**
     * @generated from field: yeying.api.asset.StreamGetBlockResponseHead head = 2;
     */
    value: StreamGetBlockResponseHead;
    case: "head";
  } | {
    /**
     * @generated from field: yeying.api.asset.StreamGetBlockResponseBody body = 3;
     */
    value: StreamGetBlockResponseBody;
    case: "body";
  } | {
    /**
     * @generated from field: yeying.api.asset.StreamGetBlockResponseTail tail = 4;
     */
    value: StreamGetBlockResponseTail;
    case: "tail";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message yeying.api.asset.StreamGetBlockResponse.
 * Use `create(StreamGetBlockResponseSchema)` to create a new message.
 */
export const StreamGetBlockResponseSchema: GenMessage<StreamGetBlockResponse> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 12);

/**
 * @generated from message yeying.api.asset.StreamGetBlockResponseHead
 */
export type StreamGetBlockResponseHead = Message<"yeying.api.asset.StreamGetBlockResponseHead"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.StreamGetBlockHeadBody body = 2;
   */
  body?: StreamGetBlockHeadBody;
};

/**
 * Describes the message yeying.api.asset.StreamGetBlockResponseHead.
 * Use `create(StreamGetBlockResponseHeadSchema)` to create a new message.
 */
export const StreamGetBlockResponseHeadSchema: GenMessage<StreamGetBlockResponseHead> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 13);

/**
 * @generated from message yeying.api.asset.StreamGetBlockHeadBody
 */
export type StreamGetBlockHeadBody = Message<"yeying.api.asset.StreamGetBlockHeadBody"> & {
  /**
   * @generated from field: yeying.api.common.ResponseStatus status = 1;
   */
  status?: ResponseStatus;

  /**
   * @generated from field: yeying.api.asset.BlockMetadata block = 2;
   */
  block?: BlockMetadata;
};

/**
 * Describes the message yeying.api.asset.StreamGetBlockHeadBody.
 * Use `create(StreamGetBlockHeadBodySchema)` to create a new message.
 */
export const StreamGetBlockHeadBodySchema: GenMessage<StreamGetBlockHeadBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 14);

/**
 * @generated from message yeying.api.asset.StreamGetBlockResponseBody
 */
export type StreamGetBlockResponseBody = Message<"yeying.api.asset.StreamGetBlockResponseBody"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message yeying.api.asset.StreamGetBlockResponseBody.
 * Use `create(StreamGetBlockResponseBodySchema)` to create a new message.
 */
export const StreamGetBlockResponseBodySchema: GenMessage<StreamGetBlockResponseBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 15);

/**
 * @generated from message yeying.api.asset.StreamGetBlockResponseTail
 */
export type StreamGetBlockResponseTail = Message<"yeying.api.asset.StreamGetBlockResponseTail"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.StreamGetBlockTailBody body = 2;
   */
  body?: StreamGetBlockTailBody;
};

/**
 * Describes the message yeying.api.asset.StreamGetBlockResponseTail.
 * Use `create(StreamGetBlockResponseTailSchema)` to create a new message.
 */
export const StreamGetBlockResponseTailSchema: GenMessage<StreamGetBlockResponseTail> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 16);

/**
 * @generated from message yeying.api.asset.StreamGetBlockTailBody
 */
export type StreamGetBlockTailBody = Message<"yeying.api.asset.StreamGetBlockTailBody"> & {
  /**
   * @generated from field: yeying.api.common.ResponseStatus status = 1;
   */
  status?: ResponseStatus;
};

/**
 * Describes the message yeying.api.asset.StreamGetBlockTailBody.
 * Use `create(StreamGetBlockTailBodySchema)` to create a new message.
 */
export const StreamGetBlockTailBodySchema: GenMessage<StreamGetBlockTailBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 17);

/**
 * @generated from message yeying.api.asset.GetBlockResponseBody
 */
export type GetBlockResponseBody = Message<"yeying.api.asset.GetBlockResponseBody"> & {
  /**
   * @generated from field: yeying.api.common.ResponseStatus status = 1;
   */
  status?: ResponseStatus;

  /**
   * @generated from field: yeying.api.asset.BlockMetadata block = 2;
   */
  block?: BlockMetadata;
};

/**
 * Describes the message yeying.api.asset.GetBlockResponseBody.
 * Use `create(GetBlockResponseBodySchema)` to create a new message.
 */
export const GetBlockResponseBodySchema: GenMessage<GetBlockResponseBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 18);

/**
 * @generated from message yeying.api.asset.GetBlockResponse
 */
export type GetBlockResponse = Message<"yeying.api.asset.GetBlockResponse"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.GetBlockResponseBody body = 2;
   */
  body?: GetBlockResponseBody;

  /**
   * @generated from field: bytes data = 3;
   */
  data: Uint8Array;
};

/**
 * Describes the message yeying.api.asset.GetBlockResponse.
 * Use `create(GetBlockResponseSchema)` to create a new message.
 */
export const GetBlockResponseSchema: GenMessage<GetBlockResponse> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 19);

/**
 * @generated from message yeying.api.asset.BlockMetadata
 */
export type BlockMetadata = Message<"yeying.api.asset.BlockMetadata"> & {
  /**
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * @generated from field: string hash = 2;
   */
  hash: string;

  /**
   * @generated from field: uint64 size = 3;
   */
  size: bigint;

  /**
   * @generated from field: string createdAt = 4;
   */
  createdAt: string;

  /**
   * @generated from field: string signature = 5;
   */
  signature: string;
};

/**
 * Describes the message yeying.api.asset.BlockMetadata.
 * Use `create(BlockMetadataSchema)` to create a new message.
 */
export const BlockMetadataSchema: GenMessage<BlockMetadata> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 20);

/**
 * *
 * 站在存储供应商的角度，数据和资产是有区别，数据有可能是有价值，也可能没有价值，但是存储供应商是没有感知，只有用户能够感知到。当用户和存储供应商之间签
 * 约了以后，用户明确告知存储供应商数据是有价值的，并愿意支付一定的报酬，存储供应商才会认为数据是资产，这种资产可以在不同的存储供应商之间流通。在签约之
 * 前，数据存储在临时存储区不能流通，只是某个存储供应商和用户之间临时的约定，所以也不会有版本的概念
 *
 * @generated from service yeying.api.asset.Block
 */
export const Block: GenService<{
  /**
   * *
   * 前端浏览器不支持client stream，按块上传接口，以块的形式放在临时存储区，资产签约时，这个块就会被挪到数据区，持久化存储。
   * 每个资产id只会保存一个块，确保业务层面始终存储和获取最新的块，也就是会覆盖之前的资产块，如果需要形成版本，就需要及时和存储供应商之间完成签约
   * 形成版本。
   *
   * @generated from rpc yeying.api.asset.Block.Put
   */
  put: {
    methodKind: "unary";
    input: typeof PutBlockRequestSchema;
    output: typeof PutBlockResponseSchema;
  },
  /**
   * *
   * 按块流式上传，1，发送chunk的简要信息；2，上传资产块的内容；3，确认资产块的完整信息；
   *
   * @generated from rpc yeying.api.asset.Block.StreamPut
   */
  streamPut: {
    methodKind: "client_streaming";
    input: typeof StreamPutBlockRequestSchema;
    output: typeof PutBlockResponseSchema;
  },
  /**
   * *
   * 前端浏览器不支持server stream，提供一个非流式的下载接口
   *
   * @generated from rpc yeying.api.asset.Block.Get
   */
  get: {
    methodKind: "unary";
    input: typeof GetBlockRequestSchema;
    output: typeof GetBlockResponseSchema;
  },
  /**
   * *
   * 分块出库数字内容
   *
   * @generated from rpc yeying.api.asset.Block.StreamGet
   */
  streamGet: {
    methodKind: "server_streaming";
    input: typeof GetBlockRequestSchema;
    output: typeof StreamGetBlockResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_yeying_api_asset_block, 0);

