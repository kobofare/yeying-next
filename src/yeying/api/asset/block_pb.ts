// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file yeying/api/asset/block.proto (package yeying.api.asset, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { MessageHeader, ResponseStatus } from "../common/message_pb";
import { file_yeying_api_common_message } from "../common/message_pb";
import type { StreamDataTagEnum } from "../common/code_pb";
import { file_yeying_api_common_code } from "../common/code_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file yeying/api/asset/block.proto.
 */
export const file_yeying_api_asset_block: GenFile = /*@__PURE__*/
  fileDesc("Chx5ZXlpbmcvYXBpL2Fzc2V0L2Jsb2NrLnByb3RvEhB5ZXlpbmcuYXBpLmFzc2V0IvkBChBTdHJlYW1QdXRSZXF1ZXN0EjUKB2RhdGFUYWcYASABKA4yJC55ZXlpbmcuYXBpLmNvbW1vbi5TdHJlYW1EYXRhVGFnRW51bRI2CgRoZWFkGAIgASgLMiYueWV5aW5nLmFwaS5hc3NldC5TdHJlYW1QdXRSZXF1ZXN0SGVhZEgAEjYKBGJvZHkYAyABKAsyJi55ZXlpbmcuYXBpLmFzc2V0LlN0cmVhbVB1dFJlcXVlc3RCb2R5SAASNgoEdGFpbBgEIAEoCzImLnlleWluZy5hcGkuYXNzZXQuU3RyZWFtUHV0UmVxdWVzdFRhaWxIAEIGCgRkYXRhInsKFFN0cmVhbVB1dFJlcXVlc3RIZWFkEjAKBmhlYWRlchgBIAEoCzIgLnlleWluZy5hcGkuY29tbW9uLk1lc3NhZ2VIZWFkZXISMQoEYm9keRgCIAEoCzIjLnlleWluZy5hcGkuYXNzZXQuU3RyZWFtUHV0SGVhZEJvZHkiIQoRU3RyZWFtUHV0SGVhZEJvZHkSDAoEaGFzaBgBIAEoCSIkChRTdHJlYW1QdXRSZXF1ZXN0Qm9keRIMCgRkYXRhGAEgASgMInsKFFN0cmVhbVB1dFJlcXVlc3RUYWlsEjAKBmhlYWRlchgBIAEoCzIgLnlleWluZy5hcGkuY29tbW9uLk1lc3NhZ2VIZWFkZXISMQoEYm9keRgCIAEoCzIjLnlleWluZy5hcGkuYXNzZXQuU3RyZWFtUHV0VGFpbEJvZHkiQwoRU3RyZWFtUHV0VGFpbEJvZHkSLgoFYmxvY2sYASABKAsyHy55ZXlpbmcuYXBpLmFzc2V0LkJsb2NrTWV0YWRhdGEiQAoOUHV0UmVxdWVzdEJvZHkSLgoFYmxvY2sYASABKAsyHy55ZXlpbmcuYXBpLmFzc2V0LkJsb2NrTWV0YWRhdGEifAoKUHV0UmVxdWVzdBIwCgZoZWFkZXIYASABKAsyIC55ZXlpbmcuYXBpLmNvbW1vbi5NZXNzYWdlSGVhZGVyEi4KBGJvZHkYAiABKAsyIC55ZXlpbmcuYXBpLmFzc2V0LlB1dFJlcXVlc3RCb2R5EgwKBGRhdGEYAyABKAwicAoLUHV0UmVzcG9uc2USMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchIvCgRib2R5GAIgASgLMiEueWV5aW5nLmFwaS5hc3NldC5QdXRSZXNwb25zZUJvZHkiRAoPUHV0UmVzcG9uc2VCb2R5EjEKBnN0YXR1cxgBIAEoCzIhLnlleWluZy5hcGkuY29tbW9uLlJlc3BvbnNlU3RhdHVzIm4KCkdldFJlcXVlc3QSMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchIuCgRib2R5GAIgASgLMiAueWV5aW5nLmFwaS5hc3NldC5HZXRSZXF1ZXN0Qm9keSIeCg5HZXRSZXF1ZXN0Qm9keRIMCgRoYXNoGAEgASgJIv0BChFTdHJlYW1HZXRSZXNwb25zZRI1CgdkYXRhVGFnGAEgASgOMiQueWV5aW5nLmFwaS5jb21tb24uU3RyZWFtRGF0YVRhZ0VudW0SNwoEaGVhZBgCIAEoCzInLnlleWluZy5hcGkuYXNzZXQuU3RyZWFtR2V0UmVzcG9uc2VIZWFkSAASNwoEYm9keRgDIAEoCzInLnlleWluZy5hcGkuYXNzZXQuU3RyZWFtR2V0UmVzcG9uc2VCb2R5SAASNwoEdGFpbBgEIAEoCzInLnlleWluZy5hcGkuYXNzZXQuU3RyZWFtR2V0UmVzcG9uc2VUYWlsSABCBgoEZGF0YSJ8ChVTdHJlYW1HZXRSZXNwb25zZUhlYWQSMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchIxCgRib2R5GAIgASgLMiMueWV5aW5nLmFwaS5hc3NldC5TdHJlYW1HZXRIZWFkQm9keSJ2ChFTdHJlYW1HZXRIZWFkQm9keRIxCgZzdGF0dXMYASABKAsyIS55ZXlpbmcuYXBpLmNvbW1vbi5SZXNwb25zZVN0YXR1cxIuCgVibG9jaxgCIAEoCzIfLnlleWluZy5hcGkuYXNzZXQuQmxvY2tNZXRhZGF0YSIlChVTdHJlYW1HZXRSZXNwb25zZUJvZHkSDAoEZGF0YRgBIAEoDCJ8ChVTdHJlYW1HZXRSZXNwb25zZVRhaWwSMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchIxCgRib2R5GAIgASgLMiMueWV5aW5nLmFwaS5hc3NldC5TdHJlYW1HZXRUYWlsQm9keSJGChFTdHJlYW1HZXRUYWlsQm9keRIxCgZzdGF0dXMYASABKAsyIS55ZXlpbmcuYXBpLmNvbW1vbi5SZXNwb25zZVN0YXR1cyJ0Cg9HZXRSZXNwb25zZUJvZHkSMQoGc3RhdHVzGAEgASgLMiEueWV5aW5nLmFwaS5jb21tb24uUmVzcG9uc2VTdGF0dXMSLgoFYmxvY2sYAiABKAsyHy55ZXlpbmcuYXBpLmFzc2V0LkJsb2NrTWV0YWRhdGEifgoLR2V0UmVzcG9uc2USMAoGaGVhZGVyGAEgASgLMiAueWV5aW5nLmFwaS5jb21tb24uTWVzc2FnZUhlYWRlchIvCgRib2R5GAIgASgLMiEueWV5aW5nLmFwaS5hc3NldC5HZXRSZXNwb25zZUJvZHkSDAoEZGF0YRgDIAEoDCJeCg1CbG9ja01ldGFkYXRhEg0KBW93bmVyGAEgASgJEgwKBGhhc2gYAiABKAkSDAoEc2l6ZRgDIAEoBBIPCgdjcmVhdGVkGAQgASgJEhEKCXNpZ25hdHVyZRgFIAEoCTK7AgoFQmxvY2sSRAoDUHV0EhwueWV5aW5nLmFwaS5hc3NldC5QdXRSZXF1ZXN0Gh0ueWV5aW5nLmFwaS5hc3NldC5QdXRSZXNwb25zZSIAElIKCVN0cmVhbVB1dBIiLnlleWluZy5hcGkuYXNzZXQuU3RyZWFtUHV0UmVxdWVzdBodLnlleWluZy5hcGkuYXNzZXQuUHV0UmVzcG9uc2UiACgBEkQKA0dldBIcLnlleWluZy5hcGkuYXNzZXQuR2V0UmVxdWVzdBodLnlleWluZy5hcGkuYXNzZXQuR2V0UmVzcG9uc2UiABJSCglTdHJlYW1HZXQSHC55ZXlpbmcuYXBpLmFzc2V0LkdldFJlcXVlc3QaIy55ZXlpbmcuYXBpLmFzc2V0LlN0cmVhbUdldFJlc3BvbnNlIgAwAUISWhB5ZXlpbmcvYXBpL2Fzc2V0YgZwcm90bzM", [file_yeying_api_common_message, file_yeying_api_common_code]);

/**
 * 先发送内容，然后发送的chunk元信息，
 *
 * @generated from message yeying.api.asset.StreamPutRequest
 */
export type StreamPutRequest = Message<"yeying.api.asset.StreamPutRequest"> & {
  /**
   * @generated from field: yeying.api.common.StreamDataTagEnum dataTag = 1;
   */
  dataTag: StreamDataTagEnum;

  /**
   * @generated from oneof yeying.api.asset.StreamPutRequest.data
   */
  data: {
    /**
     * @generated from field: yeying.api.asset.StreamPutRequestHead head = 2;
     */
    value: StreamPutRequestHead;
    case: "head";
  } | {
    /**
     * @generated from field: yeying.api.asset.StreamPutRequestBody body = 3;
     */
    value: StreamPutRequestBody;
    case: "body";
  } | {
    /**
     * @generated from field: yeying.api.asset.StreamPutRequestTail tail = 4;
     */
    value: StreamPutRequestTail;
    case: "tail";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message yeying.api.asset.StreamPutRequest.
 * Use `create(StreamPutRequestSchema)` to create a new message.
 */
export const StreamPutRequestSchema: GenMessage<StreamPutRequest> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 0);

/**
 * @generated from message yeying.api.asset.StreamPutRequestHead
 */
export type StreamPutRequestHead = Message<"yeying.api.asset.StreamPutRequestHead"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.StreamPutHeadBody body = 2;
   */
  body?: StreamPutHeadBody;
};

/**
 * Describes the message yeying.api.asset.StreamPutRequestHead.
 * Use `create(StreamPutRequestHeadSchema)` to create a new message.
 */
export const StreamPutRequestHeadSchema: GenMessage<StreamPutRequestHead> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 1);

/**
 * @generated from message yeying.api.asset.StreamPutHeadBody
 */
export type StreamPutHeadBody = Message<"yeying.api.asset.StreamPutHeadBody"> & {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;
};

/**
 * Describes the message yeying.api.asset.StreamPutHeadBody.
 * Use `create(StreamPutHeadBodySchema)` to create a new message.
 */
export const StreamPutHeadBodySchema: GenMessage<StreamPutHeadBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 2);

/**
 * @generated from message yeying.api.asset.StreamPutRequestBody
 */
export type StreamPutRequestBody = Message<"yeying.api.asset.StreamPutRequestBody"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message yeying.api.asset.StreamPutRequestBody.
 * Use `create(StreamPutRequestBodySchema)` to create a new message.
 */
export const StreamPutRequestBodySchema: GenMessage<StreamPutRequestBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 3);

/**
 * @generated from message yeying.api.asset.StreamPutRequestTail
 */
export type StreamPutRequestTail = Message<"yeying.api.asset.StreamPutRequestTail"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.StreamPutTailBody body = 2;
   */
  body?: StreamPutTailBody;
};

/**
 * Describes the message yeying.api.asset.StreamPutRequestTail.
 * Use `create(StreamPutRequestTailSchema)` to create a new message.
 */
export const StreamPutRequestTailSchema: GenMessage<StreamPutRequestTail> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 4);

/**
 * @generated from message yeying.api.asset.StreamPutTailBody
 */
export type StreamPutTailBody = Message<"yeying.api.asset.StreamPutTailBody"> & {
  /**
   * @generated from field: yeying.api.asset.BlockMetadata block = 1;
   */
  block?: BlockMetadata;
};

/**
 * Describes the message yeying.api.asset.StreamPutTailBody.
 * Use `create(StreamPutTailBodySchema)` to create a new message.
 */
export const StreamPutTailBodySchema: GenMessage<StreamPutTailBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 5);

/**
 * @generated from message yeying.api.asset.PutRequestBody
 */
export type PutRequestBody = Message<"yeying.api.asset.PutRequestBody"> & {
  /**
   * 资产块
   *
   * @generated from field: yeying.api.asset.BlockMetadata block = 1;
   */
  block?: BlockMetadata;
};

/**
 * Describes the message yeying.api.asset.PutRequestBody.
 * Use `create(PutRequestBodySchema)` to create a new message.
 */
export const PutRequestBodySchema: GenMessage<PutRequestBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 6);

/**
 * @generated from message yeying.api.asset.PutRequest
 */
export type PutRequest = Message<"yeying.api.asset.PutRequest"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.PutRequestBody body = 2;
   */
  body?: PutRequestBody;

  /**
   * 资产块内容
   *
   * @generated from field: bytes data = 3;
   */
  data: Uint8Array;
};

/**
 * Describes the message yeying.api.asset.PutRequest.
 * Use `create(PutRequestSchema)` to create a new message.
 */
export const PutRequestSchema: GenMessage<PutRequest> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 7);

/**
 * @generated from message yeying.api.asset.PutResponse
 */
export type PutResponse = Message<"yeying.api.asset.PutResponse"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.PutResponseBody body = 2;
   */
  body?: PutResponseBody;
};

/**
 * Describes the message yeying.api.asset.PutResponse.
 * Use `create(PutResponseSchema)` to create a new message.
 */
export const PutResponseSchema: GenMessage<PutResponse> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 8);

/**
 * @generated from message yeying.api.asset.PutResponseBody
 */
export type PutResponseBody = Message<"yeying.api.asset.PutResponseBody"> & {
  /**
   * @generated from field: yeying.api.common.ResponseStatus status = 1;
   */
  status?: ResponseStatus;
};

/**
 * Describes the message yeying.api.asset.PutResponseBody.
 * Use `create(PutResponseBodySchema)` to create a new message.
 */
export const PutResponseBodySchema: GenMessage<PutResponseBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 9);

/**
 * @generated from message yeying.api.asset.GetRequest
 */
export type GetRequest = Message<"yeying.api.asset.GetRequest"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.GetRequestBody body = 2;
   */
  body?: GetRequestBody;
};

/**
 * Describes the message yeying.api.asset.GetRequest.
 * Use `create(GetRequestSchema)` to create a new message.
 */
export const GetRequestSchema: GenMessage<GetRequest> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 10);

/**
 * @generated from message yeying.api.asset.GetRequestBody
 */
export type GetRequestBody = Message<"yeying.api.asset.GetRequestBody"> & {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;
};

/**
 * Describes the message yeying.api.asset.GetRequestBody.
 * Use `create(GetRequestBodySchema)` to create a new message.
 */
export const GetRequestBodySchema: GenMessage<GetRequestBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 11);

/**
 * @generated from message yeying.api.asset.StreamGetResponse
 */
export type StreamGetResponse = Message<"yeying.api.asset.StreamGetResponse"> & {
  /**
   * @generated from field: yeying.api.common.StreamDataTagEnum dataTag = 1;
   */
  dataTag: StreamDataTagEnum;

  /**
   * @generated from oneof yeying.api.asset.StreamGetResponse.data
   */
  data: {
    /**
     * @generated from field: yeying.api.asset.StreamGetResponseHead head = 2;
     */
    value: StreamGetResponseHead;
    case: "head";
  } | {
    /**
     * @generated from field: yeying.api.asset.StreamGetResponseBody body = 3;
     */
    value: StreamGetResponseBody;
    case: "body";
  } | {
    /**
     * @generated from field: yeying.api.asset.StreamGetResponseTail tail = 4;
     */
    value: StreamGetResponseTail;
    case: "tail";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message yeying.api.asset.StreamGetResponse.
 * Use `create(StreamGetResponseSchema)` to create a new message.
 */
export const StreamGetResponseSchema: GenMessage<StreamGetResponse> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 12);

/**
 * @generated from message yeying.api.asset.StreamGetResponseHead
 */
export type StreamGetResponseHead = Message<"yeying.api.asset.StreamGetResponseHead"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.StreamGetHeadBody body = 2;
   */
  body?: StreamGetHeadBody;
};

/**
 * Describes the message yeying.api.asset.StreamGetResponseHead.
 * Use `create(StreamGetResponseHeadSchema)` to create a new message.
 */
export const StreamGetResponseHeadSchema: GenMessage<StreamGetResponseHead> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 13);

/**
 * @generated from message yeying.api.asset.StreamGetHeadBody
 */
export type StreamGetHeadBody = Message<"yeying.api.asset.StreamGetHeadBody"> & {
  /**
   * @generated from field: yeying.api.common.ResponseStatus status = 1;
   */
  status?: ResponseStatus;

  /**
   * @generated from field: yeying.api.asset.BlockMetadata block = 2;
   */
  block?: BlockMetadata;
};

/**
 * Describes the message yeying.api.asset.StreamGetHeadBody.
 * Use `create(StreamGetHeadBodySchema)` to create a new message.
 */
export const StreamGetHeadBodySchema: GenMessage<StreamGetHeadBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 14);

/**
 * @generated from message yeying.api.asset.StreamGetResponseBody
 */
export type StreamGetResponseBody = Message<"yeying.api.asset.StreamGetResponseBody"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message yeying.api.asset.StreamGetResponseBody.
 * Use `create(StreamGetResponseBodySchema)` to create a new message.
 */
export const StreamGetResponseBodySchema: GenMessage<StreamGetResponseBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 15);

/**
 * @generated from message yeying.api.asset.StreamGetResponseTail
 */
export type StreamGetResponseTail = Message<"yeying.api.asset.StreamGetResponseTail"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.StreamGetTailBody body = 2;
   */
  body?: StreamGetTailBody;
};

/**
 * Describes the message yeying.api.asset.StreamGetResponseTail.
 * Use `create(StreamGetResponseTailSchema)` to create a new message.
 */
export const StreamGetResponseTailSchema: GenMessage<StreamGetResponseTail> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 16);

/**
 * @generated from message yeying.api.asset.StreamGetTailBody
 */
export type StreamGetTailBody = Message<"yeying.api.asset.StreamGetTailBody"> & {
  /**
   * @generated from field: yeying.api.common.ResponseStatus status = 1;
   */
  status?: ResponseStatus;
};

/**
 * Describes the message yeying.api.asset.StreamGetTailBody.
 * Use `create(StreamGetTailBodySchema)` to create a new message.
 */
export const StreamGetTailBodySchema: GenMessage<StreamGetTailBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 17);

/**
 * @generated from message yeying.api.asset.GetResponseBody
 */
export type GetResponseBody = Message<"yeying.api.asset.GetResponseBody"> & {
  /**
   * @generated from field: yeying.api.common.ResponseStatus status = 1;
   */
  status?: ResponseStatus;

  /**
   * @generated from field: yeying.api.asset.BlockMetadata block = 2;
   */
  block?: BlockMetadata;
};

/**
 * Describes the message yeying.api.asset.GetResponseBody.
 * Use `create(GetResponseBodySchema)` to create a new message.
 */
export const GetResponseBodySchema: GenMessage<GetResponseBody> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 18);

/**
 * @generated from message yeying.api.asset.GetResponse
 */
export type GetResponse = Message<"yeying.api.asset.GetResponse"> & {
  /**
   * @generated from field: yeying.api.common.MessageHeader header = 1;
   */
  header?: MessageHeader;

  /**
   * @generated from field: yeying.api.asset.GetResponseBody body = 2;
   */
  body?: GetResponseBody;

  /**
   * @generated from field: bytes data = 3;
   */
  data: Uint8Array;
};

/**
 * Describes the message yeying.api.asset.GetResponse.
 * Use `create(GetResponseSchema)` to create a new message.
 */
export const GetResponseSchema: GenMessage<GetResponse> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 19);

/**
 * @generated from message yeying.api.asset.BlockMetadata
 */
export type BlockMetadata = Message<"yeying.api.asset.BlockMetadata"> & {
  /**
   * @generated from field: string owner = 1;
   */
  owner: string;

  /**
   * @generated from field: string hash = 2;
   */
  hash: string;

  /**
   * @generated from field: uint64 size = 3;
   */
  size: bigint;

  /**
   * @generated from field: string created = 4;
   */
  created: string;

  /**
   * @generated from field: string signature = 5;
   */
  signature: string;
};

/**
 * Describes the message yeying.api.asset.BlockMetadata.
 * Use `create(BlockMetadataSchema)` to create a new message.
 */
export const BlockMetadataSchema: GenMessage<BlockMetadata> = /*@__PURE__*/
  messageDesc(file_yeying_api_asset_block, 20);

/**
 * *
 * 站在存储供应商的角度，数据和资产是有区别，数据有可能是有价值，也可能没有价值，但是存储供应商是没有感知，只有用户能够感知到。当用户和存储供应商之间签
 * 约了以后，用户明确告知存储供应商数据是有价值的，并愿意支付一定的报酬，存储供应商才会认为数据是资产，这种资产可以在不同的存储供应商之间流通。在签约之
 * 前，数据存储在临时存储区不能流通，只是某个存储供应商和用户之间临时的约定，所以也不会有版本的概念
 *
 * @generated from service yeying.api.asset.Block
 */
export const Block: GenService<{
  /**
   * *
   * 前端浏览器不支持client stream，按块上传接口，以块的形式放在临时存储区，资产签约时，这个块就会被挪到数据区，持久化存储。
   * 每个资产id只会保存一个块，确保业务层面始终存储和获取最新的块，也就是会覆盖之前的资产块，如果需要形成版本，就需要及时和存储供应商之间完成签约
   * 形成版本。
   *
   * @generated from rpc yeying.api.asset.Block.Put
   */
  put: {
    methodKind: "unary";
    input: typeof PutRequestSchema;
    output: typeof PutResponseSchema;
  },
  /**
   * *
   * 按块流式上传，1，发送chunk的简要信息；2，上传资产块的内容；3，确认资产块的完整信息；
   *
   * @generated from rpc yeying.api.asset.Block.StreamPut
   */
  streamPut: {
    methodKind: "client_streaming";
    input: typeof StreamPutRequestSchema;
    output: typeof PutResponseSchema;
  },
  /**
   * *
   * 前端浏览器不支持server stream，提供一个非流式的下载接口
   *
   * @generated from rpc yeying.api.asset.Block.Get
   */
  get: {
    methodKind: "unary";
    input: typeof GetRequestSchema;
    output: typeof GetResponseSchema;
  },
  /**
   * *
   * 分块出库数字内容
   *
   * @generated from rpc yeying.api.asset.Block.StreamGet
   */
  streamGet: {
    methodKind: "server_streaming";
    input: typeof GetRequestSchema;
    output: typeof StreamGetResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_yeying_api_asset_block, 0);

