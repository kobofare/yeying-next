/**
 * @fileoverview gRPC-Web generated client stub for yeying.api.identity
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v4.25.0
// source: yeying/api/identity/identity.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as yeying_api_identity_identity_pb from '../../../yeying/api/identity/identity_pb'; // proto import: "yeying/api/identity/identity.proto"


export class IdentityClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorDeposit = new grpcWeb.MethodDescriptor(
    '/yeying.api.identity.Identity/Deposit',
    grpcWeb.MethodType.UNARY,
    yeying_api_identity_identity_pb.DepositRequest,
    yeying_api_identity_identity_pb.DepositResponse,
    (request: yeying_api_identity_identity_pb.DepositRequest) => {
      return request.serializeBinary();
    },
    yeying_api_identity_identity_pb.DepositResponse.deserializeBinary
  );

  deposit(
    request: yeying_api_identity_identity_pb.DepositRequest,
    metadata?: grpcWeb.Metadata | null): Promise<yeying_api_identity_identity_pb.DepositResponse>;

  deposit(
    request: yeying_api_identity_identity_pb.DepositRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: yeying_api_identity_identity_pb.DepositResponse) => void): grpcWeb.ClientReadableStream<yeying_api_identity_identity_pb.DepositResponse>;

  deposit(
    request: yeying_api_identity_identity_pb.DepositRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: yeying_api_identity_identity_pb.DepositResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/yeying.api.identity.Identity/Deposit',
        request,
        metadata || {},
        this.methodDescriptorDeposit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/yeying.api.identity.Identity/Deposit',
    request,
    metadata || {},
    this.methodDescriptorDeposit);
  }

  methodDescriptorRetrieve = new grpcWeb.MethodDescriptor(
    '/yeying.api.identity.Identity/Retrieve',
    grpcWeb.MethodType.UNARY,
    yeying_api_identity_identity_pb.RetrieveRequest,
    yeying_api_identity_identity_pb.RetrieveResponse,
    (request: yeying_api_identity_identity_pb.RetrieveRequest) => {
      return request.serializeBinary();
    },
    yeying_api_identity_identity_pb.RetrieveResponse.deserializeBinary
  );

  retrieve(
    request: yeying_api_identity_identity_pb.RetrieveRequest,
    metadata?: grpcWeb.Metadata | null): Promise<yeying_api_identity_identity_pb.RetrieveResponse>;

  retrieve(
    request: yeying_api_identity_identity_pb.RetrieveRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: yeying_api_identity_identity_pb.RetrieveResponse) => void): grpcWeb.ClientReadableStream<yeying_api_identity_identity_pb.RetrieveResponse>;

  retrieve(
    request: yeying_api_identity_identity_pb.RetrieveRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: yeying_api_identity_identity_pb.RetrieveResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/yeying.api.identity.Identity/Retrieve',
        request,
        metadata || {},
        this.methodDescriptorRetrieve,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/yeying.api.identity.Identity/Retrieve',
    request,
    metadata || {},
    this.methodDescriptorRetrieve);
  }

  methodDescriptorQuery = new grpcWeb.MethodDescriptor(
    '/yeying.api.identity.Identity/Query',
    grpcWeb.MethodType.UNARY,
    yeying_api_identity_identity_pb.QueryRequest,
    yeying_api_identity_identity_pb.QueryResponse,
    (request: yeying_api_identity_identity_pb.QueryRequest) => {
      return request.serializeBinary();
    },
    yeying_api_identity_identity_pb.QueryResponse.deserializeBinary
  );

  query(
    request: yeying_api_identity_identity_pb.QueryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<yeying_api_identity_identity_pb.QueryResponse>;

  query(
    request: yeying_api_identity_identity_pb.QueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: yeying_api_identity_identity_pb.QueryResponse) => void): grpcWeb.ClientReadableStream<yeying_api_identity_identity_pb.QueryResponse>;

  query(
    request: yeying_api_identity_identity_pb.QueryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: yeying_api_identity_identity_pb.QueryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/yeying.api.identity.Identity/Query',
        request,
        metadata || {},
        this.methodDescriptorQuery,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/yeying.api.identity.Identity/Query',
    request,
    metadata || {},
    this.methodDescriptorQuery);
  }

  methodDescriptorShare = new grpcWeb.MethodDescriptor(
    '/yeying.api.identity.Identity/Share',
    grpcWeb.MethodType.UNARY,
    yeying_api_identity_identity_pb.ShareRequest,
    yeying_api_identity_identity_pb.ShareResponse,
    (request: yeying_api_identity_identity_pb.ShareRequest) => {
      return request.serializeBinary();
    },
    yeying_api_identity_identity_pb.ShareResponse.deserializeBinary
  );

  share(
    request: yeying_api_identity_identity_pb.ShareRequest,
    metadata?: grpcWeb.Metadata | null): Promise<yeying_api_identity_identity_pb.ShareResponse>;

  share(
    request: yeying_api_identity_identity_pb.ShareRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: yeying_api_identity_identity_pb.ShareResponse) => void): grpcWeb.ClientReadableStream<yeying_api_identity_identity_pb.ShareResponse>;

  share(
    request: yeying_api_identity_identity_pb.ShareRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: yeying_api_identity_identity_pb.ShareResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/yeying.api.identity.Identity/Share',
        request,
        metadata || {},
        this.methodDescriptorShare,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/yeying.api.identity.Identity/Share',
    request,
    metadata || {},
    this.methodDescriptorShare);
  }

  methodDescriptorCancel = new grpcWeb.MethodDescriptor(
    '/yeying.api.identity.Identity/Cancel',
    grpcWeb.MethodType.UNARY,
    yeying_api_identity_identity_pb.CancelRequest,
    yeying_api_identity_identity_pb.CancelResponse,
    (request: yeying_api_identity_identity_pb.CancelRequest) => {
      return request.serializeBinary();
    },
    yeying_api_identity_identity_pb.CancelResponse.deserializeBinary
  );

  cancel(
    request: yeying_api_identity_identity_pb.CancelRequest,
    metadata?: grpcWeb.Metadata | null): Promise<yeying_api_identity_identity_pb.CancelResponse>;

  cancel(
    request: yeying_api_identity_identity_pb.CancelRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: yeying_api_identity_identity_pb.CancelResponse) => void): grpcWeb.ClientReadableStream<yeying_api_identity_identity_pb.CancelResponse>;

  cancel(
    request: yeying_api_identity_identity_pb.CancelRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: yeying_api_identity_identity_pb.CancelResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/yeying.api.identity.Identity/Cancel',
        request,
        metadata || {},
        this.methodDescriptorCancel,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/yeying.api.identity.Identity/Cancel',
    request,
    metadata || {},
    this.methodDescriptorCancel);
  }

}

